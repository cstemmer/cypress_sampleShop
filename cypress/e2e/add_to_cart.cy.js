import catalog from '../objects/product_catalog.obj'
import productPage from '../objects/product_page.obj'
import modal from '../objects/product_added_modal.obj'
import 'cypress-real-events/support'

describe('Add to cart', () => {
    const baseUrl = Cypress.config('baseUrl')
    context('logged in user', () => {
        it('logged in user can add to cart from product catalog and modal is displayed', () => {
           cy.loginFrontEnd()
           cy.visit('/products')
           cy.get(catalog.productTile).first().should('be.visible')
           cy.get(modal.modal).should('not.be.visible')
           cy.get(catalog.addToCartButton).first()
                .should('have.text', 'Add to cart')
                .click()
           cy.get(modal.modal).should('be.visible')
           cy.get(modal.header).should('be.visible')
                .and('have.text', 'Added!')
           cy.get(modal.icon).should('be.visible')
           cy.get(modal.message).should('be.visible')
                .and('have.text', 'Your product has been added to cart.')
           cy.get(modal.viewCartLink).should('be.visible')
                .and('have.text', 'View Cart')
                .and('have.attr', 'href', '/view_cart')
           cy.get(modal.continueShoppingButton).should('be.visible')
                .and('have.text', 'Continue Shopping')
        })

         it('logged in user can add to cart from individual product page and modal is displayed', () => {
            cy.loginFrontEnd()
            cy.visit('/product_details/1')
            cy.get(productPage.name).should('be.visible')
            cy.get(modal.modal).should('not.be.visible')
            cy.get(productPage.addToCartButtton).should('contain', 'Add to cart')
                .click()
            cy.get(modal.modal).should('be.visible')
            cy.get(modal.header).should('be.visible')
                .and('have.text', 'Added!')
            cy.get(modal.icon).should('be.visible')
            cy.get(modal.message).should('be.visible')
                .and('have.text', 'Your product has been added to cart.')
            cy.get(modal.viewCartLink).should('be.visible')
                .and('have.text', 'View Cart')
                .and('have.attr', 'href', '/view_cart')
            cy.get(modal.continueShoppingButton).should('be.visible')
                .and('have.text', 'Continue Shopping')
         })

     it('logged in user can add to cart from overlay screen and continue shopping', () => {
            cy.loginFrontEnd()
            cy.visit('/products')
            cy.get(catalog.productTile).first().should('be.visible')
            cy.get(modal.modal).should('not.be.visible')
            cy.get(catalog.productTile).first().realHover()
            cy.get(catalog.productTile).first().within(() => {
                cy.get(catalog.overlayCartButton).should('have.text', 'Add to cart')
                    .click()
            })
            cy.get(modal.modal).should('be.visible')
            cy.get(modal.continueShoppingButton).click()
            cy.get(modal.modal).should('not.be.visible')
            cy.url().should('eq', `${baseUrl}/products`)
            cy.get(catalog.addToCartButton).eq(1).should('be.visible')
                .and('have.text', 'Add to cart')
      })

    })
     context('logged out user', () => {

        it('logged out user can add to cart from product catalog and modal is displayed', () => {
             cy.visit('/products')
             cy.get(catalog.productTile).first().should('be.visible')
             cy.get(modal.modal).should('not.be.visible')
             cy.get(catalog.addToCartButton).first()
                  .should('have.text', 'Add to cart')
                  .click()
             cy.get(modal.modal).should('be.visible')
             cy.get(modal.header).should('be.visible')
                  .and('have.text', 'Added!')
             cy.get(modal.icon).should('be.visible')
             cy.get(modal.message).should('be.visible')
                  .and('have.text', 'Your product has been added to cart.')
             cy.get(modal.viewCartLink).should('be.visible')
                  .and('have.text', 'View Cart')
                  .and('have.attr', 'href', '/view_cart')
             cy.get(modal.continueShoppingButton).should('be.visible')
                  .and('have.text', 'Continue Shopping')
          })

           it('logged out user can add to cart from individual product page and modal is displayed', () => {
              cy.visit('/product_details/1')
              cy.get(productPage.name).should('be.visible')
              cy.get(modal.modal).should('not.be.visible')
              cy.get(productPage.addToCartButtton).should('contain', 'Add to cart')
                  .click()
              cy.get(modal.modal).should('be.visible')
              cy.get(modal.header).should('be.visible')
                  .and('have.text', 'Added!')
              cy.get(modal.icon).should('be.visible')
              cy.get(modal.message).should('be.visible')
                  .and('have.text', 'Your product has been added to cart.')
              cy.get(modal.viewCartLink).should('be.visible')
                  .and('have.text', 'View Cart')
                  .and('have.attr', 'href', '/view_cart')
              cy.get(modal.continueShoppingButton).should('be.visible')
                  .and('have.text', 'Continue Shopping')
           })

            it('logged out user can add to cart from overlay screen and continue shopping', () => {
                  cy.visit('/products')
                  cy.get(catalog.productTile).first().scrollIntoView()
                  cy.get(catalog.productTile).first().should('be.visible')
                  cy.get(modal.modal).should('not.be.visible')
                  cy.get(catalog.productTile).first().realHover({ scrollBehavior: false })
                  cy.get(catalog.productTile).first().within(() => {
                      cy.get(catalog.overlayCartButton).should('have.text', 'Add to cart')
                          .click()
                  })
                  cy.get(modal.modal).should('be.visible')
                  cy.get(modal.continueShoppingButton).click()
                  cy.get(modal.modal).should('not.be.visible')
                  cy.url().should('eq', `${baseUrl}/products`)
                  cy.get(catalog.addToCartButton).eq(1).should('be.visible')
                      .and('have.text', 'Add to cart')
            })
    })
})